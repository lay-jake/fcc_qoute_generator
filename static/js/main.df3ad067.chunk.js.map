{"version":3,"sources":["backgrounds.js","App.js","reportWebVitals.js","index.js"],"names":["backgroundColors","App","_useState","useState","qoute","author","_useState2","Object","slicedToArray","currentQoute","setCurrentQoute","_useState3","_useState4","mainColor","setMainColor","react_default","a","createElement","className","style","backgroundColor","id","color","href","encodeURI","concat","onClick","Math","floor","length","random","axios","get","then","response","data","content","catch","error","console","log","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"iPAAaA,EAAmB,CAAC,UAAW,UAAW,UAAW,UAAW,UACzE,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,WC4BjCC,MAhCf,WAAe,IAAAC,EAC0BC,mBAAS,CAACC,MAAM,qFAA2EC,OAAO,aAAYC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAA9IO,EAAYH,EAAA,GAACI,EAAeJ,EAAA,GAAAK,EACFR,mBAAS,WAAUS,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAA7CE,EAASD,EAAA,GAACE,EAAYF,EAAA,GAe7B,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAaC,MAAO,CAACC,gBAAgBP,IACrDE,EAAAC,EAAAC,cAAA,OAAKI,GAAG,YAAYF,MAAO,CAACG,MAAMT,IAChCE,EAAAC,EAAAC,cAAA,KAAGI,GAAG,QAAM,IAAGZ,EAAaL,MAAK,KACjCW,EAAAC,EAAAC,cAAA,KAAGI,GAAG,UAAQ,KAAIZ,EAAaJ,QAC/BU,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAuBG,GAAG,cAAcE,KAAMC,UAAS,4CAAAC,OAA6ChB,EAAaL,MAAK,MAAAqB,OAAKhB,EAAaJ,OAAM,aACvJc,MAAO,CAACC,gBAAgBP,KAC5BE,EAAAC,EAAAC,cAAA,UAAQI,GAAG,YAAYK,QAAS,kBAnBtCZ,EAAad,EAAiB2B,KAAKC,MAAO5B,EAAiB6B,OAASF,KAAKG,iBAExEC,IAAMC,IAAI,kCACVC,KAAM,SAASC,GACdxB,EAAgB,CAACN,MAAM8B,EAASC,KAAKC,QAAS/B,OAAO6B,EAASC,KAAK9B,WAEpEgC,MAAO,SAASC,GACfC,QAAQC,IAAIF,MAYyCnB,MAAO,CAACC,gBAAgBP,IAAW,mBClB/E4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAZ,KAAAW,EAAAE,KAAA,UAAqBb,KAAK,SAAAc,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH1C,EAAAC,EAAAC,cAACF,EAAAC,EAAM0C,WAAU,KACf3C,EAAAC,EAAAC,cAAC0C,EAAG,QAORlB","file":"static/js/main.df3ad067.chunk.js","sourcesContent":["export const backgroundColors = ['#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6', \r\n\t\t  '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D',\r\n\t\t  '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A', \r\n\t\t  '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',\r\n\t\t  '#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC', \r\n\t\t  '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399',\r\n\t\t  '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680', \r\n\t\t  '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933',\r\n\t\t  '#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3', \r\n\t\t  '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF'];","import './App.css';\nimport React, {useState} from 'react';\nimport axios from 'axios';\nimport { backgroundColors } from './backgrounds';\n\nfunction App() {\n  const [currentQoute,setCurrentQoute] = useState({qoute:'The question isn’t who is going to let me; it’s who is going to stop me.',author:'Ayn Rand'})\n  const [mainColor,setMainColor] = useState('#282c34');\n\n  \n  const newQoute= () => {\n    setMainColor(backgroundColors[Math.floor((backgroundColors.length * Math.random()))])\n\n     axios.get('https://api.quotable.io/random')\n    .then( function(response) {\n      setCurrentQoute({qoute:response.data.content, author:response.data.author})\n    })\n    .catch( function(error){\n      console.log(error)\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\" style={{backgroundColor:mainColor}}>\n        <div id=\"quote-box\" style={{color:mainColor}}>\n          <p id='text'>\"{currentQoute.qoute}\"</p>\n          <p id='author'>- {currentQoute.author}</p>\n          <a className='fa-brands fa-twitter' id='tweet-quote' href={encodeURI(`http://www.twitter.com/intent/tweet?text=${currentQoute.qoute} -${currentQoute.author} #qoutes`)}\n              style={{backgroundColor:mainColor}}></a>\n          <button id=\"new-quote\" onClick={()=> newQoute()} style={{backgroundColor:mainColor}}> New Quote </button>\n        </div>  \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}